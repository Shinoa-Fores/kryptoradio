#!/bin/sh -eu

PREV_ID=/blocks/1
LAST_SENT_TX=
RAW_HTML=`mktemp`
RAW_OUT=`mktemp`
RAW_CSV=`mktemp`
RAW_ERR=`mktemp`

clean () {
    exec >&2
    echo
    echo "Last fetched block was $PREV_ID"
    echo "HTML:        $RAW_HTML"
    echo "XSLT output: $RAW_OUT"
    echo "CSV output:  $RAW_CSV"
    echo "XSLT error:  $RAW_ERR"
    exit
}

fetch_once () {
    truncate -s 0 "$RAW_HTML" "$RAW_OUT" "$RAW_ERR"

    URL="$1"
    XSL="$2"
    shift 2

    curl -sfm 30 -o "$RAW_HTML" "http://80.240.143.139/$URL" 
    xsltproc --novalid --html -o "$RAW_OUT" "$@" "$XSL" "$RAW_HTML" 2>$RAW_ERR
    xsltproc --novalid --html csv.xsl "$RAW_OUT" | head -c -1 >"$RAW_CSV" 2>$RAW_ERR
}

fetch () {
    for I in 1 2 3; do
	if fetch_once "$@"; then
	    return
	fi
	echo -n '!' >&2
	sleep 10
    done
    false
}

send () {
    curl -X PUT http://localhost:3000/fimk --data-binary "@$RAW_CSV"
}

trap clean EXIT INT

while true; do
    echo -n . >&2

    fetch "" find_new.xsl --stringparam last_block_url "$PREV_ID"
    
    exec <"$RAW_OUT"
    read -r NEXT_ID
    read -r NEWEST_TX

    # Decide if we should send transactions
    if test "$LAST_SENT_TX" -a "$LAST_SENT_TX" != "$NEWEST_TX"; then
	echo " found new transactions" >&2
	fetch transactions transactions.xsl --stringparam last_tx "$LAST_SENT_TX"
	send
    fi

    LAST_SENT_TX=$NEWEST_TX

    # Start over if we got nothing
    if test "$NEXT_ID" = ""; then
    	sleep 10
    	continue
    else
	echo " found $NEXT_ID" >&2
    	PREV_ID="$NEXT_ID"
    fi

    fetch "$NEXT_ID" block.xsl
    send
done
